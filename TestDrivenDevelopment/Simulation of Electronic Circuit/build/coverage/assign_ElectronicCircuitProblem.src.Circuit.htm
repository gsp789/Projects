<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>ElectronicCircuitProblem.src.Circuit - Coverage Report</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css" href="report.css" />

</head><body><div class="container"><h1>Summary</h1><table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Class:</th><td>ElectronicCircuitProblem.src.Circuit</td></tr><tr><th>Assembly:</th><td>assign</td></tr><tr><th>File(s):</th><td><a href="#dUHSem4SDassign4srcCircuitcs">d:\UH\Sem4\SD\assign4\src\Circuit.cs</a></td></tr><tr><th>Coverage:</th><td>100%</td></tr><tr><th>Covered lines:</th><td>15</td></tr><tr><th>Coverable lines:</th><td>15</td></tr><tr><th>Total lines:</th><td>43</td></tr></table>
<h1>Metrics</h1><table class="overview">
<tr>
<th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr>
<tr><td>.ctor()</td><td>1</td><td>100</td><td>100</td></tr><tr><td>AddBuses(...)</td><td>1</td><td>100</td><td>100</td></tr><tr><td>AddGates(...)</td><td>1</td><td>100</td><td>100</td></tr><tr><td>IsValid()</td><td>4</td><td>100</td><td>100</td></tr><tr><td>Simulate()</td><td>2</td><td>100</td><td>50</td></tr></table>
<h1>File(s)</h1><h2 id="dUHSem4SDassign4srcCircuitcs">d:\UH\Sem4\SD\assign4\src\Circuit.cs</h2><table>
<tr>
<th></th><th>#</th><th>Line</th><th>Coverage</th></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>1</code></td><td class="light"><code>using&nbsp;System.Collections.Generic;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>2</code></td><td class="light"><code>using&nbsp;System;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>3</code></td><td class="light"><code>using&nbsp;System.Linq;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>4</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>5</code></td><td class="light"><code>namespace&nbsp;ElectronicCircuitProblem.src</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>6</code></td><td class="light"><code>{</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>7</code></td><td class="light"><code>&nbsp;&nbsp;public&nbsp;class&nbsp;Circuit</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>8</code></td><td class="light"><code>&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">9</td><td class="right"><code>9</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;List&lt;IGate&gt;&nbsp;gates&nbsp;=&nbsp;new&nbsp;List&lt;IGate&gt;();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">9</td><td class="right"><code>10</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;List&lt;Bus&gt;&nbsp;buses&nbsp;=&nbsp;new&nbsp;List&lt;Bus&gt;();</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>11</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>12</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;bool&nbsp;IsValid()</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>13</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">36</td><td class="right"><code>14</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;gates.Aggregate(true,&nbsp;(result,&nbsp;gate)&nbsp;=&gt;&nbsp;result&nbsp;?&nbsp;gate.IsValid():&nbsp;result&nbsp;)&nbsp;&nbsp;&amp;&amp;</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">13</td><td class="right"><code>15</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buses.Aggregate(true,&nbsp;(result,&nbsp;bus)&nbsp;=&gt;&nbsp;result&nbsp;?&nbsp;bus.IsValid():&nbsp;result&nbsp;);</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">7</td><td class="right"><code>16</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>17</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>18</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;AddBuses(params&nbsp;Bus[]&nbsp;inputBuses)</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">8</td><td class="right"><code>19</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">31</td><td class="right"><code>20</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Array.ForEach(inputBuses,&nbsp;bus&nbsp;=&gt;&nbsp;buses.Add(bus));</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">8</td><td class="right"><code>21</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>22</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>23</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;AddGates(params&nbsp;IGate[]&nbsp;inputGates)</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">8</td><td class="right"><code>24</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">41</td><td class="right"><code>25</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Array.ForEach(inputGates,&nbsp;gate&nbsp;=&gt;&nbsp;gates.Add(gate));</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">8</td><td class="right"><code>26</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>27</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>28</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Simulate()</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>29</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">5</td><td class="right"><code>30</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gates.ForEach(gate&nbsp;=&gt;&nbsp;gate.GetCurrentState());</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>31</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//buses.ForEach(bus&nbsp;=&gt;&nbsp;bus.GetCurrentState());</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>32</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>33</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>34</code></td><td class="light"><code>&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>35</code></td><td class="light"><code>}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>36</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>37</code></td><td class="light"><code>//Venkat:&nbsp;Move&nbsp;forward&nbsp;to&nbsp;simulate&nbsp;the&nbsp;logic&nbsp;for&nbsp;a&nbsp;valid&nbsp;circuit.</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>38</code></td><td class="light"><code>//The&nbsp;simulate&nbsp;function&nbsp;in&nbsp;Circuit&nbsp;will&nbsp;work&nbsp;in&nbsp;two&nbsp;phases.</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>39</code></td><td class="light"><code>//phase&nbsp;1:&nbsp;tell&nbsp;each&nbsp;part&nbsp;to&nbsp;simulate.&nbsp;When&nbsp;simulate&nbsp;is&nbsp;received,&nbsp;each&nbsp;part&nbsp;will&nbsp;ask&nbsp;for&nbsp;data&nbsp;from&nbsp;it&#39;s&nbsp;input,&nbsp;do&nbsp;its&nbsp;lo</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>40</code></td><td class="light"><code>//phase&nbsp;2:&nbsp;tell&nbsp;each&nbsp;part&nbsp;to&nbsp;copy&nbsp;its&nbsp;next&nbsp;state&nbsp;as&nbsp;its&nbsp;current&nbsp;state.</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>41</code></td><td class="light"><code>//This&nbsp;way&nbsp;we&nbsp;do&nbsp;not&nbsp;have&nbsp;to&nbsp;worry&nbsp;about&nbsp;the&nbsp;order&nbsp;in&nbsp;which&nbsp;each&nbsp;parts&nbsp;are&nbsp;connected.</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>42</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>43</code></td><td class="light"><code>//After&nbsp;that,&nbsp;create&nbsp;the&nbsp;GUI.&nbsp;Keep&nbsp;the&nbsp;GUI&nbsp;thin&nbsp;and&nbsp;do&nbsp;not&nbsp;put&nbsp;any&nbsp;business&nbsp;logic&nbsp;in&nbsp;the&nbsp;GUI.</code></td></tr>
</table>
<div class="footer">Generated by: ReportGenerator 1.2.6.0<br />11/19/2015 - 6:56:30 PM<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>